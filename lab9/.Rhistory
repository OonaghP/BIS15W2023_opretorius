knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
colleges <-read_csv(here("data", "ca_college_data.csv")) %>% janitor::clean_names()
colleges <-read_csv(here("lab9", "data", "ca_college_data.csv")) %>% janitor::clean_names()
glimpse(colleges)
head(colleges)
glimpse(colleges)
naniar::miss_var_summary(homerange)
glimpse(colleges)
naniar::miss_var_summary(colleges)
View(colleges)
colleges %>%
#group_by(city) %>%
count(city)
colleges %>%
#group_by(city) %>%
count(city) %>%
arrange(-n)
colleges %>%
ggplot( aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_bar(stat="city")
colleges %>%
ggplot( aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot( aes(x=city, y=count(city)))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot(aes(x=city, y=count(city)))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
group_by(city) %>%
summarize(max_no_college = (max(na.rm = TRUE))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(count(city))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(., n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
slice_max
??slice_max
colleges %>%
#count(city) %>%
slice_max(order_by = count(city), n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(n = 10)
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n)
colleges_per_city %>%
slice_max(order_by = n, n=10) %>%
ggplot(aes(x=city))+
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(count(city))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(n)) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city %>%
slice_head(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n)
colleges_per_city
colleges_per_city %>%
slice_head(n, n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n) %>%
slice_head(n=10)
colleges_per_city
colleges_per_city %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city %>%
ggplot(aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_col()
colleges_per_city %>%
ggplot(aes(x=city, y=arrange(-n)))+
geom_col()
colleges_per_city %>%
ggplot(aes(x=city, y=n))+
geom_col()
colleges %>%
group_by(city) %>%
summarise(av_cost=mean(costt4_a))
colleges %>%
group_by(city) %>%
summarise(av_cost=mean(costt4_a)) %>%
arrange(-(av_cost))
colleges %>%
filter(city == "Davis")
colleges %>%
filter(city == "Malibu" & "Davis") %>%
colleges %>%
filter(city == "Malibu" & "Davis")
colleges %>%
filter(city == c("Malibu","Davis"))
colleges %>%
filter(city == "Malibu")
colleges %>%
filter(city == "Malibu" | "Davis")
colleges %>%
filter(city == "Malibu" | city == "Davis")
colleges %>%
filter(city == "Malibu" | city == "Davis") %>%
ggplot(aes(x=instnm, y=costt4_a))+ #don't put a space before the + or it won't run
geom_col()
colleges %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()
colleges %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se = TRUE)
colleges %>%
ggplot(aes(x=costt4_a, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se = TRUE)
