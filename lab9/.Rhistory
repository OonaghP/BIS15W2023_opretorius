knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
colleges <-read_csv(here("data", "ca_college_data.csv")) %>% janitor::clean_names()
colleges <-read_csv(here("lab9", "data", "ca_college_data.csv")) %>% janitor::clean_names()
glimpse(colleges)
head(colleges)
glimpse(colleges)
naniar::miss_var_summary(homerange)
glimpse(colleges)
naniar::miss_var_summary(colleges)
View(colleges)
colleges %>%
#group_by(city) %>%
count(city)
colleges %>%
#group_by(city) %>%
count(city) %>%
arrange(-n)
colleges %>%
ggplot( aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_bar(stat="city")
colleges %>%
ggplot( aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot( aes(x=city, y=count(city)))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot(aes(x=city, y=count(city)))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
group_by(city) %>%
summarize(max_no_college = (max(na.rm = TRUE))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(count(city))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(., n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
slice_max
??slice_max
colleges %>%
#count(city) %>%
slice_max(order_by = count(city), n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
count(city) %>%
slice_max(n = 10)
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n)
colleges_per_city %>%
slice_max(order_by = n, n=10) %>%
ggplot(aes(x=city))+
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(count(city))) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges %>%
#group_by(city) %>%
summarize(max_no_college = max(n)) %>%
slice_max(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city %>%
slice_head(n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n)
colleges_per_city
colleges_per_city %>%
slice_head(n, n=10) %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city <- colleges %>%
count(city) %>%
arrange(-n) %>%
slice_head(n=10)
colleges_per_city
colleges_per_city %>%
ggplot(aes(x=city))+ #can flip on its side if you specify the x first
geom_bar()
colleges_per_city %>%
ggplot(aes(x=city, y=n))+ #can flip on its side if you specify the x first
geom_col()
colleges_per_city %>%
ggplot(aes(x=city, y=arrange(-n)))+
geom_col()
colleges_per_city %>%
ggplot(aes(x=city, y=n))+
geom_col()
colleges %>%
group_by(city) %>%
summarise(av_cost=mean(costt4_a))
colleges %>%
group_by(city) %>%
summarise(av_cost=mean(costt4_a)) %>%
arrange(-(av_cost))
colleges %>%
filter(city == "Davis")
colleges %>%
filter(city == "Malibu" & "Davis") %>%
colleges %>%
filter(city == "Malibu" & "Davis")
colleges %>%
filter(city == c("Malibu","Davis"))
colleges %>%
filter(city == "Malibu")
colleges %>%
filter(city == "Malibu" | "Davis")
colleges %>%
filter(city == "Malibu" | city == "Davis")
colleges %>%
filter(city == "Malibu" | city == "Davis") %>%
ggplot(aes(x=instnm, y=costt4_a))+ #don't put a space before the + or it won't run
geom_col()
colleges %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()
colleges %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se = TRUE)
colleges %>%
ggplot(aes(x=costt4_a, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
#install.packages("gapminder")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library("gapminder")
library(ggthemes)
glimpse(gapminder)
naniar::miss_var_summary(gapminder) #shows no NAs
gapminder #checked that the NAs are not recorded as something else. e.g. -999
names(gapminder)
gapminder2 <- gapminder %>% mutate(year=as_factor(year)) #if you don't do this, then R will only show you years in 5 year gaps (as the data was entered in 5 year intervals)
gapminder2 %>%
group_by(year) %>%
summarise(mean_life_exp = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_exp, fill = year))+
geom_col()+
theme_classic()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Mean Life Expectancy Over Time",
x = NULL,
y= "n")
gapminder2 %>%
filter(year == "1952") %>%
ggplot(aes(x=lifeExp))+
geom_density(fill="seagreen4", alpha  =0.4, color = "black")+
labs(title = "Life Expectancy 1952",
x = "Life Expectancy",
y = "Proportion")
gapminder2 %>%
filter(year == "2007") %>%
ggplot(aes(x=lifeExp))+
geom_density(fill="skyblue", alpha  =0.4, color = "black")+
labs(title = "Life Expectancy 2007",
x = "Life Expectancy",
y = "Proportion")
gapminder2 %>%
ggplot(aes(x=continent, y = lifeExp, fill = continent))+
geom_boxplot()+
labs(title = "Life Expectancy by Region",
x = "Continent",
y = "Average Life Expectancy (Years)")
gapminder2 %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.5)
gapminder2 %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5, col = "seagreen", size = 0.5)
gapminder2 %>%
select(country, year, pop) %>%
filter(year==1952 | year==2007) %>%
pivot_wider(names_from = year,
names_prefix = "yr_",
values_from = pop) %>%
mutate(pop_change= yr_2007-yr_1952) %>%
arrange(desc(pop_change))
gapminder2 %>%
filter(country=="China" | country=="India" | country=="United States" | country=="Indonesia" | country=="Brazil") %>%
select(country, year, pop) %>%
ggplot(aes(x=year, y=pop, group=country, color=country))+
geom_line()
gapminder2 %>%
filter(country=="China" | country=="India" | country=="United States" | country=="Indonesia" | country=="Brazil") %>%
select(country, year, gdpPercap) %>%
ggplot(aes(x=year, y=gdpPercap, group=country, color=country))+
geom_line()
gapminder2 %>%
filter(year=="1987") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(title = "GDP versus life expectancy in 1999",
x = "GDP per capita (log scale)",
y = "Life Expectancy",
size = "Popoulation (millions)",
color = "Continent") +
scale_size(range = c(0.1, 10),
breaks = 1000000 * c(250, 500, 750, 1000, 1250),
labels = c("250", "500", "750", "1000", "1250")) +
facet_wrap(~continent)
gapminder2 %>%
filter(year=="1987") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(title = "GDP versus life expectancy in 1999",
x = "GDP per capita (log scale)",
y = "Life Expectancy",
size = "Population (millions)",
color = "Continent") +
scale_size(range = c(0.1, 10),
breaks = 1000000 * c(250, 500, 750, 1000, 1250),
labels = c("250", "500", "750", "1000", "1250")) +
facet_wrap(~continent)
gapminder2 %>%
filter(year=="1987") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(title = "GDP versus life expectancy in 1999",
x = "GDP per capita (log scale)",
y = "Life Expectancy (years)",
size = "Population (millions)",
color = "Continent") +
scale_size(range = c(0.1, 10),
breaks = 1000000 * c(250, 500, 750, 1000, 1250),
labels = c("250", "500", "750", "1000", "1250")) +
facet_wrap(~continent)
gapminder2 %>%
filter(year=="1987") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(title = "National GDP versus life expectancy in 1999 by continent",
x = "GDP per capita (log scale)",
y = "Life Expectancy (years)",
size = "Population (millions)",
color = "Continent") +
scale_size(range = c(0.1, 10),
breaks = 1000000 * c(250, 500, 750, 1000, 1250),
labels = c("250", "500", "750", "1000", "1250")) +
facet_wrap(~continent)
